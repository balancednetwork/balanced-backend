"""v0.1.0-remove-unused-token-cols

Revision ID: a13532f366ab
Revises: f2ab3320b375
Create Date: 2023-02-28 20:13:38.743758

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a13532f366ab'
down_revision = 'f2ab3320b375'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_token_pool_chain_id', table_name='token_pool')
    op.drop_index('ix_token_pool_reference_address', table_name='token_pool')
    op.drop_index('ix_token_pool_reference_symbol', table_name='token_pool')
    op.drop_index('ix_token_pool_symbol', table_name='token_pool')
    op.drop_table('token_pool')
    op.drop_column('tokens', 'total_supply')
    op.drop_column('tokens', 'lp_fees_decimal')
    op.drop_column('tokens', 'volume')
    op.drop_column('tokens', 'volume_decimal')
    op.drop_column('tokens', 'lp_fees')
    op.drop_column('tokens', 'baln_fees')
    op.drop_column('tokens', 'holders')
    op.drop_column('tokens', 'baln_fees_decimal')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tokens', sa.Column('baln_fees_decimal', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('tokens', sa.Column('holders', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('tokens', sa.Column('baln_fees', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('tokens', sa.Column('lp_fees', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('tokens', sa.Column('volume_decimal', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('tokens', sa.Column('volume', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('tokens', sa.Column('lp_fees_decimal', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('tokens', sa.Column('total_supply', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.create_table('token_pool',
    sa.Column('pool_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('chain_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('timestamp', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pool_price', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('pool_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('total_supply', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('symbol', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('price', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('supply', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('reference_address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('reference_symbol', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('reference_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('reference_price', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('reference_supply', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('pool_id', 'address', name='token_pool_pkey')
    )
    op.create_index('ix_token_pool_symbol', 'token_pool', ['symbol'], unique=False)
    op.create_index('ix_token_pool_reference_symbol', 'token_pool', ['reference_symbol'], unique=False)
    op.create_index('ix_token_pool_reference_address', 'token_pool', ['reference_address'], unique=False)
    op.create_index('ix_token_pool_chain_id', 'token_pool', ['chain_id'], unique=False)
    # ### end Alembic commands ###
